plugins {
  // Needed to upload to bintray
  id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

dependencies {
  compile gradleApi()
  compile localGroovy()
  compile "org.codehaus.groovy.modules.http-builder:http-builder:0.7"
}

repositories {
  mavenCentral()
}

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')
  publications = ['MyPublication']
  pkg {
    repo = 'buildops-gradle'
    name = 'buildops-gradle'
    userOrg = 'lukewink'
    licenses = ['Apache-2.0']
    vcsUrl = 'https://github.com/lukewink/buildops-gradle'

    version {
      name = '1.0.0'
      desc = 'Gradle plugin for interacting with buildops servers'
      released = new Date()
    }
  }
}

def pomConfig = {
  licenses {
    license {
      name "The Apache Software License, Version 2.0"
      url "http://www.apache.org/licenses/LICENSE-2.0.txt"
      distribution "repo"
    }
  }
  developers {
    developer {
      id "lukewink"
      name "Luke Winkenbach"
      email "lukewink@gmail.com"
    }
  }
}

publishing {
  publications {
    MyPublication(MavenPublication) {
      from components.java
      artifact sourcesJar
      artifact docJar
      groupId 'com.lwink'
      artifactId 'buildops-gradle'
      version '1.0.0'
      pom.withXml {
        def root = asNode()
        root.appendNode('description', 'Gradle plugin to interact with buildops servers')
        root.appendNode('name', 'buildops-gradle')
        root.appendNode('url', 'https://github.com/lukewink/buildops-gradle')
        root.children().last() + pomConfig
      }
    }
  }
}

group = 'com.lwink'
version = '1.0-SNAPSHOT'

uploadArchives {
  repositories {
    mavenDeployer {
      repository(url: uri('../repo'))
    }
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '3.4.1'
}

task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = 'sources'
  from sourceSets.main.allSource
}

task docJar(type: Jar, dependsOn: groovydoc) {
  classifier = 'groovydoc'
  from groovydoc.destinationDir
}

artifacts {
  archives sourcesJar
  archives docJar
}
